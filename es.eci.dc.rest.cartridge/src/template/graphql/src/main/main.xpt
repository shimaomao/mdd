«IMPORT dc»
«EXTENSION helpers::functions-»
«DEFINE main FOR Domain»
	«FILE "src/main/java/main/Main.java"-»
package main;

«FOREACH attributeSets.select(e | e.metaType == dc::Entity && ((Entity) e).independent) AS entity-»
import services.«((Entity) entity).pluralName.toLowerCase()».«((Entity) entity).pluralName»Codec;
import services.«((Entity) entity).pluralName.toLowerCase()».«((Entity) entity).pluralName»InverseCodec;
«ENDFOREACH-»

import java.util.Optional;

import io.vertx.core.AbstractVerticle;
import io.vertx.core.DeploymentOptions;
import io.vertx.core.Future;
import io.vertx.core.logging.Logger;
import io.vertx.core.logging.LoggerFactory;


/**
 * * Run with:
 *  java -jar target/dc-jms-integrations-1.0-SNAPSHOT-fat -conf config.json
 *  
 * @author erodriguez
 *
 */
public class Main extends AbstractVerticle {
	
	final Logger logger = LoggerFactory.getLogger(Main.class);
	
	@Override
	public void start(Future<Void> fut) throws Exception {
	
		«FOREACH attributeSets.select(e | e.metaType == dc::Entity && ((Entity) e).independent) AS entity-»
		vertx.eventBus().registerCodec(new «((Entity) entity).pluralName»Codec());
		vertx.eventBus().registerCodec(new «((Entity) entity).pluralName»InverseCodec());
		«ENDFOREACH-»
		
		vertx.deployVerticle("web.GraphQLVerticle", new DeploymentOptions().setWorker(true).setConfig(config()),
				result -> {
					logger.info("Deployed successfully GraphQLVerticle");
				});
	}
		
		@Override
	public void stop() throws Exception {
		super.stop();
	}
}
«ENDFILE-»
«ENDDEFINE-»

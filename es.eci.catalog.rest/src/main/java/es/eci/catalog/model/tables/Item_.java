/*
 * This file is generated by jOOQ.
*/
package es.eci.catalog.model.tables;


import es.eci.catalog.model.Keys;
import es.eci.catalog.model.Public;
import es.eci.catalog.model.tables.records.Item_Record;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Item_ extends TableImpl<Item_Record> {

    private static final long serialVersionUID = -1906853717;

    /**
     * The reference instance of <code>public.item_</code>
     */
    public static final Item_ ITEM_ = new Item_();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Item_Record> getRecordType() {
        return Item_Record.class;
    }

    /**
     * The column <code>public.item_._id_</code>.
     */
    public final TableField<Item_Record, Integer> _ID_ = createField("_id_", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('item___id__seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.item_.name_</code>.
     */
    public final TableField<Item_Record, String> NAME_ = createField("name_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.item_.description_</code>.
     */
    public final TableField<Item_Record, String> DESCRIPTION_ = createField("description_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.item_.code_</code>.
     */
    public final TableField<Item_Record, String> CODE_ = createField("code_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.item_.price_</code>.
     */
    public final TableField<Item_Record, Double> PRICE_ = createField("price_", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.item_.retail_price_</code>.
     */
    public final TableField<Item_Record, Double> RETAIL_PRICE_ = createField("retail_price_", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.item_.cost_price_</code>.
     */
    public final TableField<Item_Record, Double> COST_PRICE_ = createField("cost_price_", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.item_._search_</code>.
     */
    public final TableField<Item_Record, Object> _SEARCH_ = createField("_search_", org.jooq.impl.DefaultDataType.getDefaultDataType("tsvector"), this, "");

    /**
     * The column <code>public.item_._types_</code>.
     */
    public final TableField<Item_Record, String[]> _TYPES_ = createField("_types_", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * The column <code>public.item_._last_modified_</code>.
     */
    public final TableField<Item_Record, String> _LAST_MODIFIED_ = createField("_last_modified_", org.jooq.impl.SQLDataType.VARCHAR.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.item_._version_</code>.
     */
    public final TableField<Item_Record, Integer> _VERSION_ = createField("_version_", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>public.item_</code> table reference
     */
    public Item_() {
        this("item_", null);
    }

    /**
     * Create an aliased <code>public.item_</code> table reference
     */
    public Item_(String alias) {
        this(alias, ITEM_);
    }

    private Item_(String alias, Table<Item_Record> aliased) {
        this(alias, aliased, null);
    }

    private Item_(String alias, Table<Item_Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Item_Record, Integer> getIdentity() {
        return Keys.IDENTITY_ITEM_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Item_Record> getPrimaryKey() {
        return Keys.ITEM__PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Item_Record>> getKeys() {
        return Arrays.<UniqueKey<Item_Record>>asList(Keys.ITEM__PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableField<Item_Record, Integer> getRecordVersion() {
        return _VERSION_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Item_ as(String alias) {
        return new Item_(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Item_ rename(String name) {
        return new Item_(name, null);
    }
}

/*
 * This file is generated by jOOQ.
*/
package es.eci.catalog.model.tables;


import es.eci.catalog.model.Keys;
import es.eci.catalog.model.Public;
import es.eci.catalog.model.tables.records.SecurityUser_Record;
import es.eci.catalog.model.udt.records.Person_Record;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SecurityUser_ extends TableImpl<SecurityUser_Record> {

    private static final long serialVersionUID = -156354483;

    /**
     * The reference instance of <code>public.security_user_</code>
     */
    public static final SecurityUser_ SECURITY_USER_ = new SecurityUser_();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SecurityUser_Record> getRecordType() {
        return SecurityUser_Record.class;
    }

    /**
     * The column <code>public.security_user_._id_</code>.
     */
    public final TableField<SecurityUser_Record, Integer> _ID_ = createField("_id_", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('security_user___id__seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.security_user_.username_</code>.
     */
    public final TableField<SecurityUser_Record, String> USERNAME_ = createField("username_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.security_user_.password_</code>.
     */
    public final TableField<SecurityUser_Record, String> PASSWORD_ = createField("password_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.security_user_.roles_</code>.
     */
    public final TableField<SecurityUser_Record, Integer[]> ROLES_ = createField("roles_", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "");

    /**
     * The column <code>public.security_user_.teaching_centers_</code>.
     */
    public final TableField<SecurityUser_Record, Integer[]> TEACHING_CENTERS_ = createField("teaching_centers_", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "");

    /**
     * The column <code>public.security_user_.person_</code>.
     */
    public final TableField<SecurityUser_Record, Person_Record> PERSON_ = createField("person_", es.eci.catalog.model.udt.Person_.PERSON_.getDataType(), this, "");

    /**
     * The column <code>public.security_user_._search_</code>.
     */
    public final TableField<SecurityUser_Record, Object> _SEARCH_ = createField("_search_", org.jooq.impl.DefaultDataType.getDefaultDataType("tsvector"), this, "");

    /**
     * The column <code>public.security_user_._types_</code>.
     */
    public final TableField<SecurityUser_Record, String[]> _TYPES_ = createField("_types_", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * The column <code>public.security_user_._last_modified_</code>.
     */
    public final TableField<SecurityUser_Record, String> _LAST_MODIFIED_ = createField("_last_modified_", org.jooq.impl.SQLDataType.VARCHAR.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.security_user_._version_</code>.
     */
    public final TableField<SecurityUser_Record, Integer> _VERSION_ = createField("_version_", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>public.security_user_</code> table reference
     */
    public SecurityUser_() {
        this("security_user_", null);
    }

    /**
     * Create an aliased <code>public.security_user_</code> table reference
     */
    public SecurityUser_(String alias) {
        this(alias, SECURITY_USER_);
    }

    private SecurityUser_(String alias, Table<SecurityUser_Record> aliased) {
        this(alias, aliased, null);
    }

    private SecurityUser_(String alias, Table<SecurityUser_Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SecurityUser_Record, Integer> getIdentity() {
        return Keys.IDENTITY_SECURITY_USER_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SecurityUser_Record> getPrimaryKey() {
        return Keys.SECURITY_USER__PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SecurityUser_Record>> getKeys() {
        return Arrays.<UniqueKey<SecurityUser_Record>>asList(Keys.SECURITY_USER__PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableField<SecurityUser_Record, Integer> getRecordVersion() {
        return _VERSION_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SecurityUser_ as(String alias) {
        return new SecurityUser_(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SecurityUser_ rename(String name) {
        return new SecurityUser_(name, null);
    }
}

/*
 * This file is generated by jOOQ.
*/
package es.eci.catalog.model.tables;


import es.eci.catalog.model.Keys;
import es.eci.catalog.model.Public;
import es.eci.catalog.model.tables.records.TeachingCenter_Record;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeachingCenter_ extends TableImpl<TeachingCenter_Record> {

    private static final long serialVersionUID = -1411051022;

    /**
     * The reference instance of <code>public.teaching_center_</code>
     */
    public static final TeachingCenter_ TEACHING_CENTER_ = new TeachingCenter_();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TeachingCenter_Record> getRecordType() {
        return TeachingCenter_Record.class;
    }

    /**
     * The column <code>public.teaching_center_._id_</code>.
     */
    public final TableField<TeachingCenter_Record, Integer> _ID_ = createField("_id_", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('teaching_center___id__seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.teaching_center_.name_</code>.
     */
    public final TableField<TeachingCenter_Record, String> NAME_ = createField("name_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.teaching_center_.generic_name_</code>.
     */
    public final TableField<TeachingCenter_Record, String> GENERIC_NAME_ = createField("generic_name_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.teaching_center_.email_</code>.
     */
    public final TableField<TeachingCenter_Record, String> EMAIL_ = createField("email_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.teaching_center_.phone_</code>.
     */
    public final TableField<TeachingCenter_Record, String> PHONE_ = createField("phone_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.teaching_center_.image_</code>.
     */
    public final TableField<TeachingCenter_Record, String> IMAGE_ = createField("image_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.teaching_center_.code_</code>.
     */
    public final TableField<TeachingCenter_Record, String> CODE_ = createField("code_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.teaching_center_.type_</code>.
     */
    public final TableField<TeachingCenter_Record, String> TYPE_ = createField("type_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.teaching_center_.nature_</code>.
     */
    public final TableField<TeachingCenter_Record, String> NATURE_ = createField("nature_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.teaching_center_.address_</code>.
     */
    public final TableField<TeachingCenter_Record, String> ADDRESS_ = createField("address_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.teaching_center_.formatted_address_</code>.
     */
    public final TableField<TeachingCenter_Record, String> FORMATTED_ADDRESS_ = createField("formatted_address_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.teaching_center_.postal_code_</code>.
     */
    public final TableField<TeachingCenter_Record, String> POSTAL_CODE_ = createField("postal_code_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.teaching_center_.town_</code>.
     */
    public final TableField<TeachingCenter_Record, String> TOWN_ = createField("town_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.teaching_center_.province_</code>.
     */
    public final TableField<TeachingCenter_Record, String> PROVINCE_ = createField("province_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.teaching_center_.autonomous_region_</code>.
     */
    public final TableField<TeachingCenter_Record, String> AUTONOMOUS_REGION_ = createField("autonomous_region_", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.teaching_center_.latitude_</code>.
     */
    public final TableField<TeachingCenter_Record, Double> LATITUDE_ = createField("latitude_", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.teaching_center_.longitude_</code>.
     */
    public final TableField<TeachingCenter_Record, Double> LONGITUDE_ = createField("longitude_", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>public.teaching_center_._search_</code>.
     */
    public final TableField<TeachingCenter_Record, Object> _SEARCH_ = createField("_search_", org.jooq.impl.DefaultDataType.getDefaultDataType("tsvector"), this, "");

    /**
     * The column <code>public.teaching_center_._types_</code>.
     */
    public final TableField<TeachingCenter_Record, String[]> _TYPES_ = createField("_types_", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "");

    /**
     * The column <code>public.teaching_center_._last_modified_</code>.
     */
    public final TableField<TeachingCenter_Record, String> _LAST_MODIFIED_ = createField("_last_modified_", org.jooq.impl.SQLDataType.VARCHAR.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>public.teaching_center_._version_</code>.
     */
    public final TableField<TeachingCenter_Record, Integer> _VERSION_ = createField("_version_", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>public.teaching_center_</code> table reference
     */
    public TeachingCenter_() {
        this("teaching_center_", null);
    }

    /**
     * Create an aliased <code>public.teaching_center_</code> table reference
     */
    public TeachingCenter_(String alias) {
        this(alias, TEACHING_CENTER_);
    }

    private TeachingCenter_(String alias, Table<TeachingCenter_Record> aliased) {
        this(alias, aliased, null);
    }

    private TeachingCenter_(String alias, Table<TeachingCenter_Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TeachingCenter_Record, Integer> getIdentity() {
        return Keys.IDENTITY_TEACHING_CENTER_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TeachingCenter_Record> getPrimaryKey() {
        return Keys.TEACHING_CENTER__PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TeachingCenter_Record>> getKeys() {
        return Arrays.<UniqueKey<TeachingCenter_Record>>asList(Keys.TEACHING_CENTER__PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableField<TeachingCenter_Record, Integer> getRecordVersion() {
        return _VERSION_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeachingCenter_ as(String alias) {
        return new TeachingCenter_(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TeachingCenter_ rename(String name) {
        return new TeachingCenter_(name, null);
    }
}
